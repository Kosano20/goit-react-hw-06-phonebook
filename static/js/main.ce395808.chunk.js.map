{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/InputField/InputField.module.css","components/App.module.css","redux/phonebook/phonebook-actions.js","components/Contact/Contact.jsx","redux/phonebook/phonebook-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/InputField/InputField.jsx","components/InputField/InputAttr.jsx","components/ContactForm/ContactForm.jsx","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuid","deleteContact","filterContacts","Contact","dispatch","useDispatch","className","styles","item","type","onClick","getFilter","state","contacts","filter","getFilteredContacts","items","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","list","map","length","contactsList","Filter","value","onChange","e","target","InputField","props","label","input","inputAttr","pattern","title","required","ContactForm","useState","setName","setNumber","reset","form","onSubmit","preventDefault","App","app","createReducer","action","contact","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devtools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ce395808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__16kEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1b1cR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__Cphd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__22I7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputField_input__1yEwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__QLjC9\"};","import * as uuid from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contact/Add\", ({ name, number }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id: uuid.v4(),\n    },\n  };\n});\n\nexport const deleteContact = createAction(\"contact/Delete\");\nexport const filterContacts = createAction(\"contact/Filter\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\nimport styles from \"./Contact.module.css\";\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n  return (\n    <li key={id} className={styles.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport Contact from \"../Contact\";\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const list = contacts?.map(({ id, name, number }) => (\n    <Contact key={id} name={name} number={number} id={id} />\n  ));\n  return contacts.length > 0 && <ul className={styles.contactsList}>{list}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\nimport { filterContacts } from \"../../redux/phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = (e) => dispatch(filterContacts(e.target.value));\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={styles.Filter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./InputField.module.css\";\n\nconst InputField = (props) => (\n  <label>\n    {props.label}\n    <input {...props} className={styles.input} />\n  </label>\n);\n\nexport default InputField;\n","const inputAttr = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n    required: true,\n    label: \"Name\",\n  },\n  number: {\n    type: \"text\",\n    name: \"number\",\n    pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n    required: true,\n    label: \"Number\",\n  },\n};\n\nexport default inputAttr;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport InputField from \"../InputField/InputField\";\nimport inputAttr from \"../InputField/InputAttr\";\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <InputField\n        {...inputAttr.name}\n        value={name}\n        onChange={handleNameChange}\n      />\n      <InputField\n        {...inputAttr.number}\n        value={number}\n        onChange={handleNumberChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactForm;\n","import ContactList from \"./ContactsList\";\nimport Filter from \"./Filter\";\nimport ContactForm from \"./ContactForm\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <ContactForm/>\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, filterContacts } from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => {\n    if (\n      state\n        .map((contact) => contact.name.toLowerCase())\n        .includes(action.payload.name.toLowerCase())\n    ) {\n      alert(`${action.payload.name} is already in contacts`);\n      return [...state];\n    }\n    return [...state, action.payload];\n  },\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devtools: process.env.NODE_ENV !== \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}